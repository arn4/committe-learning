import numpy as np

from ..._cython.numpy_extra import symmetrize

def p2variance(q11, q12, q22, m1, m2, gamma, noise):
    return symmetrize(np.array([
        # Var[q11]
        320*m1**4 + 576*gamma**2*noise*m1**4 + 5376*gamma*m1**4 + 19584*gamma**2**2*m1**4 - 5760*gamma**2*m1**6 - 5760*gamma**2*m1**4*m2**2 + 544*gamma*noise*m1**2*q11 + 1088*m1**2*q22 + 1632*gamma**2*noise*m1**2*q22 + 8352*gamma**2*m1**2*q22 + 
        19872*gamma**2**3*m1**2*q22 - 8256*gamma*m1**4*q22 - 42048*gamma**2*m1**4*q22 - 3392*gamma*m1**2*m2**2*q22 - 17088*gamma**2*m1**2*m2**2*q22 + 48*noise*q22**2 + 32*gamma**2*noise**2*q22**2 + 128*gamma*noise*q22**2 + 128**2*q22**2 + 
        192*gamma**2*noise**2*q22**2 + 672*gamma**3*q22**2 + 1224*gamma**2**4*q22**2 - 1344*m1**2*q22**2 - 2064*gamma**2*noise*m1**2*q22**2 - 12384*gamma*m1**2*q22**2 - 31824*gamma**2**2*m1**2*q22**2 + 29664*gamma**2*m1**4*q22**2 - 96*m2**2*q22**2 - 
        128*gamma**2*noise*m2**2*q22**2 - 832*gamma*m2**2*q22**2 - 2112*gamma**2**2*m2**2*q22**2 + 12768*gamma**2*m1**2*m2**2*q22**2 + 416*gamma**2*m2**4*q22**2 - 336*gamma*noise*q22**3 - 192*q22**3 - 336*gamma**2*noise*q22**3 - 960*gamma**2*q22**3 - 
        1728*gamma**2**3*q22**3 + 9672*gamma*m1**2*q22**3 + 29592*gamma**2*m1**2*q22**3 + 672*gamma*m2**2*q22**3 + 2112*gamma**2*m2**2*q22**3 + 384*q22**4 + 600*gamma**2*noise*q22**4 + 1128*gamma*q22**4 + 1764*gamma**2**2*q22**4 - 18540*gamma**2*m1**2*q22**4 - 
        1200*gamma**2*m2**2*q22**4 - 1800*gamma*q22**5 - 1800*gamma**2*q22**5 + (5085*gamma**2*q22**6)/2. - 4352*gamma*m1**3*m2*q12 - 22272*gamma**2*m1**3*m2*q12 - 768*m1*m2*q22*q12 - 1088*gamma**2*noise*m1*m2*q22*q12 - 6784*gamma*m1*m2*q22*q12 - 
        17088*gamma**2**2*m1*m2*q22*q12 + 33792*gamma**2*m1**3*m2*q22*q12 + 6784*gamma**2*m1*m2**3*q22*q12 + 8448*gamma*m1*m2*q22**2*q12 + 25728*gamma**2*m1*m2*q22**2*q12 - 19920*gamma**2*m1*m2*q22**3*q12 - 320*m1**2*q12**2 - 
        576*gamma**2*noise*m1**2*q12**2 - 3200*gamma*m1**2*q12**2 - 8448*gamma**2**2*m1**2*q12**2 + 8640*gamma**2*m1**4*q12**2 + 10112*gamma**2*m1**2*m2**2*q12**2 - 272*gamma*noise*q22*q12**2 - 160*q22*q12**2 - 272*gamma**2*noise*q22*q12**2 - 
        784*gamma**2*q22*q12**2 - 1392*gamma**2**3*q22*q12**2 + 8256*gamma*m1**2*q22*q12**2 + 25152*gamma**2*m1**2*q22*q12**2 + 1696*gamma*m2**2*q22*q12**2 + 5152*gamma**2*m2**2*q22*q12**2 + 672*q22**2*q12**2 + 1032*gamma**2*noise*q22**2*q12**2 + 
        1968*gamma*q22**2*q12**2 + 3048*gamma**2**2*q22**2*q12**2 - 29664*gamma**2*m1**2*q22**2*q12**2 - 6384*gamma**2*m2**2*q22**2*q12**2 - 4836*gamma*q22**3*q12**2 - 4836*gamma**2*q22**3*q12**2 + 9270*gamma**2*q22**4*q12**2 + 2176*gamma*m1*m2*q12**3 + 
        6784*gamma**2*m1*m2*q12**3 - 16896*gamma**2*m1*m2*q22*q12**3 + 80*q12**4 + 144*gamma**2*noise*q12**4 + 256*gamma*q12**4 + 416*gamma**2**2*q12**4 - 4320*gamma**2*m1**2*q12**4 - 1440*gamma**2*m2**2*q12**4 - 2064*gamma*q22*q12**4 - 
        2064*gamma**2*q22*q12**4 + 7416*gamma**2*q22**2*q12**4 + 720*gamma**2*q12**6 - 512*gamma*m1**4*q22 - 2688*gamma**2*m1**4*q22 - 160*m1**2*q22*q22 - 272*gamma**2*noise*m1**2*q22*q22 - 1568*gamma*m1**2*q22*q22 - 4176*gamma**2**2*m1**2*q22*q22 + 
        4128*gamma**2*m1**4*q22*q22 + 5152*gamma**2*m1**2*m2**2*q22*q22 - 64*gamma*noise*q22**2*q22 - 32*q22**2*q22 - 64*gamma**2*noise*q22**2*q22 - 176*gamma**2*q22**2*q22 - 336*gamma**2**3*q22**2*q22 + 1968*gamma*m1**2*q22**2*q22 + 
        6192*gamma**2*m1**2*q22**2*q22 + 416*gamma*m2**2*q22**2*q22 + 1280*gamma**2*m2**2*q22**2*q22 + 96*q22**3*q22 + 168*gamma**2*noise*q22**3*q22 + 288*gamma*q22**3*q22 + 480*gamma**2**2*q22**3*q22 - 4836*gamma**2*m1**2*q22**3*q22 - 
        1056*gamma**2*m2**2*q22**3*q22 - 564*gamma*q22**4*q22 - 564*gamma**2*q22**4*q22 + 900*gamma**2*q22**5*q22 + 6784*gamma**2*m1**3*m2*q12*q22 + 3392*gamma*m1*m2*q22*q12*q22 + 10304*gamma**2*m1*m2*q22*q12*q22 - 
        12864*gamma**2*m1*m2*q22**2*q12*q22 + 1600*gamma*m1**2*q12**2*q22 + 4864*gamma**2*m1**2*q12**2*q22 + 272*q22*q12**2*q22 + 408*gamma**2*noise*q22*q12**2*q22 + 784*gamma*q22*q12**2*q22 + 1208*gamma**2**2*q22*q12**2*q22 - 
        12576*gamma**2*m1**2*q22*q12**2*q22 - 4272*gamma**2*m2**2*q22*q12**2*q22 - 3096*gamma*q22**2*q12**2*q22 - 3096*gamma**2*q22**2*q12**2*q22 + 7398*gamma**2*q22**3*q12**2*q22 - 5568*gamma**2*m1*m2*q12**3*q22 - 672*gamma*q12**4*q22 - 
        672*gamma**2*q12**4*q22 + 5256*gamma**2*q22*q12**4*q22 + 416*gamma**2*m1**4*q22**2 + 392*gamma*m1**2*q22*q22**2 + 1208*gamma**2*m1**2*q22*q22**2 + 32*q22**2*q22**2 + 48*gamma**2*noise*q22**2*q22**2 + 88*gamma*q22**2*q22**2 + 
        140*gamma**2**2*q22**2*q22**2 - 1524*gamma**2*m1**2*q22**2*q22**2 - 528*gamma**2*m2**2*q22**2*q22**2 - 240*gamma*q22**3*q22**2 - 240*gamma**2*q22**3*q22**2 + 441*gamma**2*q22**4*q22**2 - 4272*gamma**2*m1*m2*q22*q12*q22**2 - 
        2112*gamma**2*m1**2*q12**2*q22**2 - 1044*gamma*q22*q12**2*q22**2 - 1044*gamma**2*q22*q12**2*q22**2 + 3978*gamma**2*q22**2*q12**2*q22**2 + 1224*gamma**2*q12**4*q22**2 - 348*gamma**2*m1**2*q22*q22**3 - 84*gamma*q22**2*q22**3 - 84*gamma**2*q22**2*q22**3 + 
        216*gamma**2*q22**3*q22**3 + 1242*gamma**2*q22*q12**2*q22**3 + (153*gamma**2*q22**2*q22**4)/2.,
        # Cov[q11, q12]
        320*m1**3*m2 + 576*gamma**2*noise*m1**3*m2 + 5376*gamma*m1**3*m2 + 19584*gamma**2**2*m1**3*m2 - 5760*gamma**2*m1**5*m2 - 5760*gamma**2*m1**3*m2**3 + 272*gamma*noise*m1*m2*q22 + 544*m1*m2*q22 + 816*gamma**2*noise*m1*m2*q22 + 
        4176*gamma**2*m1*m2*q22 + 9936*gamma**2**3*m1*m2*q22 - 5472*gamma*m1**3*m2*q22 - 27936*gamma**2*m1**3*m2*q22 - 1696*gamma*m1*m2**3*q22 - 8544*gamma**2*m1*m2**3*q22 - 432*m1*m2*q22**2 - 696*gamma**2*noise*m1*m2*q22**2 - 
        4080*gamma*m1*m2*q22**2 - 10584*gamma**2**2*m1*m2*q22**2 + 14832*gamma**2*m1**3*m2*q22**2 + 4272*gamma**2*m1*m2**3*q22**2 + 2388*gamma*m1*m2*q22**3 + 7308*gamma**2*m1*m2*q22**3 - 3690*gamma**2*m1*m2*q22**4 + 272*gamma*noise*m1**2*q12 + 
        544*m1**2*q12 + 816*gamma**2*noise*m1**2*q12 + 4176*gamma**2*m1**2*q12 + 9936*gamma**2**3*m1**2*q12 - 2784*gamma*m1**4*q12 - 14112*gamma**2*m1**4*q12 - 4960*gamma*m1**2*m2**2*q12 - 25248*gamma**2*m1**2*m2**2*q12 + 
        48*noise*q22*q12 + 32*gamma**2*noise**2*q22*q12 + 128*gamma*noise*q22*q12 + 128**2*q22*q12 + 192*gamma**2*noise**2*q22*q12 + 672*gamma**3*q22*q12 + 1224*gamma**2**4*q22*q12 - 912*m1**2*q22*q12 - 1368*gamma**2*noise*m1**2*q22*q12 - 
        8304*gamma*m1**2*q22*q12 - 21240*gamma**2**2*m1**2*q22*q12 + 14832*gamma**2*m1**4*q22*q12 - 288*m2**2*q22*q12 - 400*gamma**2*noise*m2**2*q22*q12 - 2528*gamma*m2**2*q22*q12 - 6384*gamma**2**2*m2**2*q22*q12 + 
        25392*gamma**2*m1**2*m2**2*q22*q12 + 2112*gamma**2*m2**4*q22*q12 - 336*gamma*noise*q22**2*q12 - 192*q22**2*q12 - 336*gamma**2*noise*q22**2*q12 - 960*gamma**2*q22**2*q12 - 1728*gamma**2**3*q22**2*q12 + 7284*gamma*m1**2*q22**2*q12 + 
        22284*gamma**2*m1**2*q22**2*q12 + 2064*gamma*m2**2*q22**2*q12 + 6384*gamma**2*m2**2*q22**2*q12 + 384*q22**3*q12 + 600*gamma**2*noise*q22**3*q12 + 1128*gamma*q22**3*q12 + 1764*gamma**2**2*q22**3*q12 - 14850*gamma**2*m1**2*q22**3*q12 - 
        3660*gamma**2*m2**2*q22**3*q12 - 1800*gamma*q22**4*q12 - 1800*gamma**2*q22**4*q12 + (5085*gamma**2*q22**5*q12)/2. - 544*m1*m2*q12**2 - 832*gamma**2*noise*m1*m2*q12**2 - 4992*gamma*m1*m2*q12**2 - 12768*gamma**2**2*m1*m2*q12**2 + 
        17088*gamma**2*m1**3*m2*q12**2 + 8448*gamma**2*m1*m2**3*q12**2 + 8400*gamma*m1*m2*q22*q12**2 + 25488*gamma**2*m1*m2*q22*q12**2 - 22416*gamma**2*m1*m2*q22**2*q12**2 - 136*gamma*noise*q12**3 - 80*q12**3 - 136*gamma**2*noise*q12**3 - 
        392*gamma**2*q12**3 - 696*gamma**2**3*q12**3 + 2784*gamma*m1**2*q12**3 + 8448*gamma**2*m1**2*q12**3 + 1392*gamma*m2**2*q12**3 + 4272*gamma**2*m2**2*q12**3 + 456*q22*q12**3 + 684*gamma**2*noise*q22*q12**3 + 1320*gamma*q22*q12**3 + 
        2028*gamma**2**2*q22*q12**3 - 14832*gamma**2*m1**2*q22*q12**3 - 7032*gamma**2*m2**2*q22*q12**3 - 3642*gamma*q22**2*q12**3 - 3642*gamma**2*q22**2*q12**3 + 7425*gamma**2*q22**3*q12**3 - 7104*gamma**2*m1*m2*q12**4 - 696*gamma*q12**5 - 696*gamma**2*q12**5 + 
        3708*gamma**2*q22*q12**5 - 1600*gamma*m1**3*m2*q22 - 8256*gamma**2*m1**3*m2*q22 - 272*m1*m2*q22*q22 - 408*gamma**2*noise*m1*m2*q22*q22 - 2480*gamma*m1*m2*q22*q22 - 6360*gamma**2**2*m1*m2*q22*q22 + 
        8304*gamma**2*m1**3*m2*q22*q22 + 4272*gamma**2*m1*m2**3*q22*q22 + 2040*gamma*m1*m2*q22**2*q22 + 6312*gamma**2*m1*m2*q22**2*q22 - 3654*gamma**2*m1*m2*q22**3*q22 - 240*m1**2*q12*q22 - 424*gamma**2*noise*m1**2*q12*q22 - 
        2384*gamma*m1**2*q12*q22 - 6312*gamma**2**2*m1**2*q12*q22 + 4272*gamma**2*m1**4*q12*q22 + 12720*gamma**2*m1**2*m2**2*q12*q22 - 200*gamma*noise*q22*q12*q22 - 112*q22*q12*q22 - 200*gamma**2*noise*q22*q12*q22 - 
        568*gamma**2*q22*q12*q22 - 1032*gamma**2**3*q22*q12*q22 + 4056*gamma*m1**2*q22*q12*q22 + 12552*gamma**2*m1**2*q22*q12*q22 + 2112*gamma*m2**2*q22*q12*q22 + 6432*gamma**2*m2**2*q22*q12*q22 + 312*q22**2*q12*q22 + 
        516*gamma**2*noise*q22**2*q12*q22 + 936*gamma*q22**2*q12*q22 + 1500*gamma**2**2*q22**2*q12*q22 - 11058*gamma**2*m1**2*q22**2*q12*q22 - 5328*gamma**2*m2**2*q22**2*q12*q22 - 1758*gamma*q22**3*q12*q22 - 1758*gamma**2*q22**3*q12*q22 + 
        2745*gamma**2*q22**4*q12*q22 + 4128*gamma*m1*m2*q12**2*q22 + 12672*gamma**2*m1*m2*q12**2*q22 - 21240*gamma**2*m1*m2*q22*q12**2*q22 + 216*q12**3*q22 + 348*gamma**2*noise*q12**3*q22 + 648*gamma*q12**3*q22 + 1020*gamma**2**2*q12**3*q22 - 
        7104*gamma**2*m1**2*q12**3*q22 - 4968*gamma**2*m2**2*q12**3*q22 - 3444*gamma*q22*q12**3*q22 - 3444*gamma**2*q22*q12**3*q22 + 9279*gamma**2*q22**2*q12**3*q22 + 2484*gamma**2*q12**5*q22 + 2112*gamma**2*m1**3*m2*q22**2 + 1044*gamma*m1*m2*q22*q22**2 + 
        3180*gamma**2*m1*m2*q22*q22**2 - 2646*gamma**2*m1*m2*q22**2*q22**2 + 996*gamma*m1**2*q12*q22**2 + 3036*gamma**2*m1**2*q12*q22**2 + 168*q22*q12*q22**2 + 252*gamma**2*noise*q22*q12*q22**2 + 480*gamma*q22*q12*q22**2 + 
        744*gamma**2**2*q22*q12*q22**2 - 5166*gamma**2*m1**2*q22*q12*q22**2 - 3732*gamma**2*m2**2*q22*q12*q22**2 - 1260*gamma*q22**2*q12*q22**2 - 1260*gamma**2*q22**2*q12*q22**2 + 2268*gamma**2*q22**3*q12*q22**2 - 7368*gamma**2*m1*m2*q12**2*q22**2 - 
        1194*gamma*q12**3*q22**2 - 1194*gamma**2*q12**3*q22**2 + 6147*gamma**2*q22*q12**3*q22**2 - 1242*gamma**2*m1*m2*q22*q22**3 - 1230*gamma**2*m1**2*q12*q22**3 - 606*gamma*q22*q12*q22**3 - 606*gamma**2*q22*q12*q22**3 + 1539*gamma**2*q22**2*q12*q22**3 + 
        1845*gamma**2*q12**3*q22**3 + (1395*gamma**2*q22*q12*q22**4)/2.,
        # Cov[q11, q22]
        320*m1**2*m2**2 + 576*gamma**2*noise*m1**2*m2**2 + 5376*gamma*m1**2*m2**2 + 19584*gamma**2**2*m1**2*m2**2 - 5760*gamma**2*m1**4*m2**2 - 5760*gamma**2*m1**2*m2**4 + 80*gamma*noise*m2**2*q22 + 160*m2**2*q22 + 240*gamma**2*noise*m2**2*q22 + 
        1296*gamma**2*m2**2*q22 + 3216*gamma**2**3*m2**2*q22 - 3232*gamma*m1**2*m2**2*q22 - 16608*gamma**2*m1**2*m2**2*q22 - 544*gamma*m2**4*q22 - 2784*gamma**2*m2**4*q22 - 48*m2**2*q22**2 - 136*gamma**2*noise*m2**2*q22**2 - 
        656*gamma*m2**2*q22**2 - 1992*gamma**2**2*m2**2*q22**2 + 6384*gamma**2*m1**2*m2**2*q22**2 + 848*gamma**2*m2**4*q22**2 + 276*gamma*m2**2*q22**3 + 876*gamma**2*m2**2*q22**3 - 390*gamma**2*m2**2*q22**4 + 384*gamma*noise*m1*m2*q12 + 
        768*m1*m2*q12 + 1152*gamma**2*noise*m1*m2*q12 + 5760*gamma**2*m1*m2*q12 + 13440*gamma**2**3*m1*m2*q12 - 4480*gamma*m1**3*m2*q12 - 22656*gamma**2*m1**3*m2*q12 - 4480*gamma*m1*m2**3*q12 - 
        22656*gamma**2*m1*m2**3*q12 - 768*m1*m2*q22*q12 - 1120*gamma**2*noise*m1*m2*q22*q12 - 6848*gamma*m1*m2*q22*q12 - 17184*gamma**2**2*m1*m2*q22*q12 + 16896*gamma**2*m1**3*m2*q22*q12 + 13696*gamma**2*m1*m2**3*q22*q12 + 
        4224*gamma*m1*m2*q22**2*q12 + 12864*gamma**2*m1*m2*q22**2*q12 - 6600*gamma**2*m1*m2*q22**3*q12 + 32*noise*q12**2 + 24*gamma**2*noise**2*q12**2 + 96*gamma*noise*q12**2 + 96**2*q12**2 + 144*gamma**2*noise**2*q12**2 + 480*gamma**3*q12**2 + 
        840*gamma**2**4*q12**2 - 352*m1**2*q12**2 - 576*gamma**2*noise*m1**2*q12**2 - 3328*gamma*m1**2*q12**2 - 8544*gamma**2**2*m1**2*q12**2 + 4320*gamma**2*m1**4*q12**2 - 352*m2**2*q12**2 - 576*gamma**2*noise*m2**2*q12**2 - 3328*gamma*m2**2*q12**2 - 
        8544*gamma**2**2*m2**2*q12**2 + 20480*gamma**2*m1**2*m2**2*q12**2 + 4320*gamma**2*m2**4*q12**2 - 280*gamma*noise*q22*q12**2 - 176*q22*q12**2 - 280*gamma**2*noise*q22*q12**2 - 824*gamma**2*q22*q12**2 - 1416*gamma**2**3*q22*q12**2 + 
        4176*gamma*m1**2*q22*q12**2 + 12720*gamma**2*m1**2*q22*q12**2 + 3328*gamma*m2**2*q22*q12**2 + 10048*gamma**2*m2**2*q22*q12**2 + 336*q22**2*q12**2 + 528*gamma**2*noise*q22**2*q12**2 + 1008*gamma*q22**2*q12**2 + 1560*gamma**2**2*q22**2*q12**2 - 
        9936*gamma**2*m1**2*q22**2*q12**2 - 6408*gamma**2*m2**2*q22**2*q12**2 - 1614*gamma*q22**3*q12**2 - 1614*gamma**2*q22**3*q12**2 + (4635*gamma**2*q22**4*q12**2)/2. + 4480*gamma*m1*m2*q12**3 + 13696*gamma**2*m1*m2*q12**3 - 
        16992*gamma**2*m1*m2*q22*q12**3 + 176*q12**4 + 288*gamma**2*noise*q12**4 + 544*gamma*q12**4 + 848*gamma**2**2*q12**4 - 4320*gamma**2*m1**2*q12**4 - 4320*gamma**2*m2**2*q12**4 - 2088*gamma*q22*q12**4 - 2088*gamma**2*q22*q12**4 + 4968*gamma**2*q22**2*q12**4 + 
        1080*gamma**2*q12**6 + 80*gamma*noise*m1**2*q22 + 160*m1**2*q22 + 240*gamma**2*noise*m1**2*q22 + 1296*gamma**2*m1**2*q22 + 3216*gamma**2**3*m1**2*q22 - 544*gamma*m1**4*q22 - 2784*gamma**2*m1**4*q22 - 3232*gamma*m1**2*m2**2*q22 - 
        16608*gamma**2*m1**2*m2**2*q22 + 16*noise*q22*q22 + 8*gamma**2*noise**2*q22*q22 + 32*gamma*noise*q22*q22 + 32**2*q22*q22 + 48*gamma**2*noise**2*q22*q22 + 192*gamma**3*q22*q22 + 384*gamma**2**4*q22*q22 - 176*m1**2*q22*q22 - 
        232*gamma**2*noise*m1**2*q22*q22 - 1552*gamma*m1**2*q22*q22 - 4104*gamma**2**2*m1**2*q22*q22 + 2064*gamma**2*m1**4*q22*q22 - 176*m2**2*q22*q22 - 232*gamma**2*noise*m2**2*q22*q22 - 1552*gamma*m2**2*q22*q22 - 
        4104*gamma**2**2*m2**2*q22*q22 + 9760*gamma**2*m1**2*m2**2*q22*q22 + 2064*gamma**2*m2**4*q22*q22 - 56*gamma*noise*q22**2*q22 - 16*q22**2*q22 - 56*gamma**2*noise*q22**2*q22 - 136*gamma**2*q22**2*q22 - 312*gamma**2**3*q22**2*q22 + 
        996*gamma*m1**2*q22**2*q22 + 3132*gamma**2*m1**2*q22**2*q22 + 680*gamma*m2**2*q22**2*q22 + 2360*gamma**2*m2**2*q22**2*q22 + 48*q22**3*q22 + 72*gamma**2*noise*q22**3*q22 + 120*gamma*q22**3*q22 + 204*gamma**2**2*q22**3*q22 - 
        1614*gamma**2*m1**2*q22**3*q22 - 882*gamma**2*m2**2*q22**3*q22 - 186*gamma*q22**4*q22 - 186*gamma**2*q22**4*q22 + 225*gamma**2*q22**5*q22 - 768*m1*m2*q12*q22 - 1120*gamma**2*noise*m1*m2*q12*q22 - 6848*gamma*m1*m2*q12*q22 - 
        17184*gamma**2**2*m1*m2*q12*q22 + 13696*gamma**2*m1**3*m2*q12*q22 + 16896*gamma**2*m1*m2**3*q12*q22 + 6848*gamma*m1*m2*q22*q12*q22 + 20672*gamma**2*m1*m2*q22*q12*q22 - 12888*gamma**2*m1*m2*q22**2*q12*q22 - 
        280*gamma*noise*q12**2*q22 - 176*q12**2*q22 - 280*gamma**2*noise*q12**2*q22 - 824*gamma**2*q12**2*q22 - 1416*gamma**2**3*q12**2*q22 + 3328*gamma*m1**2*q12**2*q22 + 10048*gamma**2*m1**2*q12**2*q22 + 4176*gamma*m2**2*q12**2*q22 + 
        12720*gamma**2*m2**2*q12**2*q22 + 560*q22*q12**2*q22 + 816*gamma**2*noise*q22*q12**2*q22 + 1600*gamma*q22*q12**2*q22 + 2432*gamma**2**2*q22*q12**2*q22 - 12600*gamma**2*m1**2*q22*q12**2*q22 - 12600*gamma**2*m2**2*q22*q12**2*q22 - 
        3114*gamma*q22**2*q12**2*q22 - 3114*gamma**2*q22**2*q12**2*q22 + 4914*gamma**2*q22**3*q12**2*q22 - 16992*gamma**2*m1*m2*q12**3*q22 - 2088*gamma*q12**4*q22 - 2088*gamma**2*q12**4*q22 + 7920*gamma**2*q22*q12**4*q22 - 48*m1**2*q22**2 - 
        136*gamma**2*noise*m1**2*q22**2 - 656*gamma*m1**2*q22**2 - 1992*gamma**2**2*m1**2*q22**2 + 848*gamma**2*m1**4*q22**2 + 6384*gamma**2*m1**2*m2**2*q22**2 - 56*gamma*noise*q22*q22**2 - 16*q22*q22**2 - 56*gamma**2*noise*q22*q22**2 - 
        136*gamma**2*q22*q22**2 - 312*gamma**2**3*q22*q22**2 + 680*gamma*m1**2*q22*q22**2 + 2360*gamma**2*m1**2*q22*q22**2 + 996*gamma*m2**2*q22*q22**2 + 3132*gamma**2*m2**2*q22*q22**2 + 32*q22**2*q22**2 + 96*gamma**2*noise*q22**2*q22**2 + 
        112*gamma*q22**2*q22**2 + 248*gamma**2**2*q22**2*q22**2 - 1530*gamma**2*m1**2*q22**2*q22**2 - 1530*gamma**2*m2**2*q22**2*q22**2 - 198*gamma*q22**3*q22**2 - 198*gamma**2*q22**3*q22**2 + 288*gamma**2*q22**4*q22**2 + 4224*gamma*m1*m2*q12*q22**2 + 
        12864*gamma**2*m1*m2*q12*q22**2 - 12888*gamma**2*m1*m2*q22*q12*q22**2 + 336*q12**2*q22**2 + 528*gamma**2*noise*q12**2*q22**2 + 1008*gamma*q12**2*q22**2 + 1560*gamma**2**2*q12**2*q22**2 - 6408*gamma**2*m1**2*q12**2*q22**2 - 
        9936*gamma**2*m2**2*q12**2*q22**2 - 3114*gamma*q22*q12**2*q22**2 - 3114*gamma**2*q22*q12**2*q22**2 + 5985*gamma**2*q22**2*q12**2*q22**2 + 4968*gamma**2*q12**4*q22**2 + 276*gamma*m1**2*q22**3 + 876*gamma**2*m1**2*q22**3 + 48*q22*q22**3 + 
        72*gamma**2*noise*q22*q22**3 + 120*gamma*q22*q22**3 + 204*gamma**2**2*q22*q22**3 - 882*gamma**2*m1**2*q22*q22**3 - 1614*gamma**2*m2**2*q22*q22**3 - 198*gamma*q22**2*q22**3 - 198*gamma**2*q22**2*q22**3 + 270*gamma**2*q22**3*q22**3 - 
        6600*gamma**2*m1*m2*q12*q22**3 - 1614*gamma*q12**2*q22**3 - 1614*gamma**2*q12**2*q22**3 + 4914*gamma**2*q22*q12**2*q22**3 - 390*gamma**2*m1**2*q22**4 - 186*gamma*q22*q22**4 - 186*gamma**2*q22*q22**4 + 288*gamma**2*q22**2*q22**4 + 
        (4635*gamma**2*q12**2*q22**4)/2. + 225*gamma**2*q22*q22**5,
        # Cov[q11, m1]
        72*gamma*noise*m1**3 + 432*m1**3 + 2376*gamma**2*m1**3 - 720*gamma*m1**5 - 720*gamma*m1**3*m2**2 + 24*noise*m1*q22 + 96*gamma*noise*m1*q22 + 336**2*m1*q22 + 1224*gamma**3*m1*q22 - 456*m1**3*q22 - 3384*gamma*m1**3*q22 - 
        144*m1*m2**2*q22 - 1056*gamma*m1*m2**2*q22 - 84*gamma*noise*m1*q22**2 - 312*m1*q22**2 - 1296*gamma**2*m1*q22**2 + 1818*gamma*m1**3*q22**2 + 528*gamma*m1*m2**2*q22**2 + 192*m1*q22**3 + 882*gamma*m1*q22**3 - 
        450*gamma*m1*q22**4 - 272*m1**2*m2*q12 - 2016*gamma*m1**2*m2*q12 - 32*gamma*noise*m2*q22*q12 - 136*m2*q22*q12 - 528*gamma**2*m2*q22*q12 + 2064*gamma*m1**2*m2*q22*q12 + 208*gamma*m2**3*q22*q12 + 108*m2*q22**2*q12 + 
        528*gamma*m2*q22**2*q12 - 300*gamma*m2*q22**3*q12 - 36*gamma*noise*m1*q12**2 - 120*m1*q12**2 - 516*gamma**2*m1*q12**2 + 720*gamma*m1**3*q12**2 + 616*gamma*m1*m2**2*q12**2 + 228*m1*q22*q12**2 + 996*gamma*m1*q22*q12**2 - 
        909*gamma*m1*q22**2*q12**2 + 40*m2*q12**3 + 208*gamma*m2*q12**3 - 336*gamma*m2*q22*q12**3 - 180*gamma*m1*q12**4 - 40*m1**3*q22 - 312*gamma*m1**3*q22 - 16*gamma*noise*m1*q22*q22 - 56*m1*q22*q22 - 252*gamma**2*m1*q22*q22 + 
        324*gamma*m1**3*q22*q22 + 320*gamma*m1*m2**2*q22*q22 + 48*m1*q22**2*q22 + 240*gamma*m1*q22**2*q22 - 141*gamma*m1*q22**3*q22 + 624*gamma*m1**2*m2*q12*q22 + 68*m2*q22*q12*q22 + 320*gamma*m2*q22*q12*q22 - 
        264*gamma*m2*q22**2*q12*q22 + 68*m1*q12**2*q22 + 284*gamma*m1*q12**2*q22 - 510*gamma*m1*q22*q12**2*q22 - 168*gamma*m2*q12**3*q22 + 50*gamma*m1**3*q22**2 + 16*m1*q22*q22**2 + 70*gamma*m1*q22*q22**2 - 
        60*gamma*m1*q22**2*q22**2 - 132*gamma*m2*q22*q12*q22**2 - 129*gamma*m1*q12**2*q22**2 - 21*gamma*m1*q22*q22**3,
        # Cov[q11, m2]
        72*gamma*noise*m1**2*m2 + 432*m1**2*m2 + 2376*gamma**2*m1**2*m2 - 720*gamma*m1**4*m2 - 720*gamma*m1**2*m2**3 + 8*noise*m2*q22 + 24*gamma*noise*m2*q22 + 96**2*m2*q22 + 384*gamma**3*m2*q22 - 280*m1**2*m2*q22 - 
        1992*gamma*m1**2*m2*q22 - 48*m2**3*q22 - 336*gamma*m2**3*q22 - 16*gamma*noise*m2*q22**2 - 32*m2*q22**2 - 228*gamma**2*m2*q22**2 + 786*gamma*m1**2*m2*q22**2 + 104*gamma*m2**3*q22**2 + 24*m2*q22**3 + 84*gamma*m2*q22**3 - 
        45*gamma*m2*q22**4 + 16*noise*m1*q12 + 72*gamma*noise*m1*q12 + 240**2*m1*q12 + 840*gamma**3*m1*q12 - 176*m1**3*q12 - 1392*gamma*m1**3*q12 - 288*m1*m2**2*q12 - 2064*gamma*m1*m2**2*q12 - 68*gamma*noise*m1*q22*q12 - 
        280*m1*q22*q12 - 1068*gamma**2*m1*q22*q12 + 1032*gamma*m1**3*q22*q12 + 1272*gamma*m1*m2**2*q22*q12 + 168*m1*q22**2*q12 + 798*gamma*m1*q22**2*q12 - 405*gamma*m1*q22**3*q12 - 36*gamma*noise*m2*q12**2 - 120*m2*q12**2 - 
        516*gamma**2*m2*q12**2 + 1264*gamma*m1**2*m2*q12**2 + 360*gamma*m2**3*q12**2 + 140*m2*q22*q12**2 + 572*gamma*m2*q22*q12**2 - 393*gamma*m2*q22**2*q12**2 + 88*m1*q12**3 + 424*gamma*m1*q12**3 - 516*gamma*m1*q22*q12**3 - 
        180*gamma*m2*q12**4 - 120*m1**2*m2*q22 - 984*gamma*m1**2*m2*q22 - 12*gamma*noise*m2*q22*q22 - 48*m2*q22*q22 - 240*gamma**2*m2*q22*q22 + 572*gamma*m1**2*m2*q22*q22 + 168*gamma*m2**3*q22*q22 + 16*m2*q22**2*q22 + 
        124*gamma*m2*q22**2*q22 - 42*gamma*m2*q22**3*q22 - 36*gamma*noise*m1*q12*q22 - 144*m1*q12*q22 - 540*gamma**2*m1*q12*q22 + 424*gamma*m1**3*q12*q22 + 1032*gamma*m1*m2**2*q12*q22 + 140*m1*q22*q12*q22 + 
        644*gamma*m1*q22*q12*q22 - 399*gamma*m1*q22**2*q12*q22 + 108*m2*q12**2*q22 + 492*gamma*m2*q12**2*q22 - 498*gamma*m2*q22*q12**2*q22 - 348*gamma*m1*q12**3*q22 + 258*gamma*m1**2*m2*q22**2 + 24*m2*q22*q22**2 + 
        120*gamma*m2*q22*q22**2 - 57*gamma*m2*q22**2*q22**2 + 60*m1*q12*q22**2 + 270*gamma*m1*q12*q22**2 - 267*gamma*m1*q22*q12*q22**2 - 297*gamma*m2*q12**2*q22**2 - 48*gamma*m2*q22*q22**3 - 105*gamma*m1*q12*q22**3,
        # Var[q12]
        320*m1**2*m2**2 + 576*gamma**2*noise*m1**2*m2**2 + 5376*gamma*m1**2*m2**2 + 19584*gamma**2**2*m1**2*m2**2 - 5760*gamma**2*m1**4*m2**2 - 5760*gamma**2*m1**2*m2**4 + 96*gamma*noise*m2**2*q22 + 192*m2**2*q22 + 288*gamma**2*noise*m2**2*q22 + 
        1440*gamma**2*m2**2*q22 + 3360*gamma**2**3*m2**2*q22 - 3264*gamma*m1**2*m2**2*q22 - 16704*gamma**2*m1**2*m2**2*q22 - 576*gamma*m2**4*q22 - 2880*gamma**2*m2**4*q22 - 96*m2**2*q22**2 - 144*gamma**2*noise*m2**2*q22**2 - 
        864*gamma*m2**2*q22**2 - 2160*gamma**2**2*m2**2*q22**2 + 6336*gamma**2*m1**2*m2**2*q22**2 + 864*gamma**2*m2**4*q22**2 + 360*gamma*m2**2*q22**3 + 1080*gamma**2*m2**2*q22**3 - 420*gamma**2*m2**2*q22**4 + 352*gamma*noise*m1*m2*q12 + 
        704*m1*m2*q12 + 1056*gamma**2*noise*m1*m2*q12 + 5472*gamma**2*m1*m2*q12 + 13152*gamma**2**3*m1*m2*q12 - 4416*gamma*m1**3*m2*q12 - 22464*gamma**2*m1**3*m2*q12 - 4416*gamma*m1*m2**3*q12 - 
        22464*gamma**2*m1*m2**3*q12 - 672*m1*m2*q22*q12 - 1104*gamma**2*noise*m1*m2*q22*q12 - 6432*gamma*m1*m2*q22*q12 - 16848*gamma**2**2*m1*m2*q22*q12 + 16992*gamma**2*m1**3*m2*q22*q12 + 13536*gamma**2*m1*m2**3*q22*q12 + 
        4056*gamma*m1*m2*q22**2*q12 + 12456*gamma**2*m1*m2*q22**2*q12 - 6540*gamma**2*m1*m2*q22**3*q12 + 32*noise*q12**2 + 20*gamma**2*noise**2*q12**2 + 80*gamma*noise*q12**2 + 80**2*q12**2 + 120*gamma**2*noise**2*q12**2 + 432*gamma**3*q12**2 + 
        804*gamma**2**4*q12**2 - 384*m1**2*q12**2 - 528*gamma**2*noise*m1**2*q12**2 - 3360*gamma*m1**2*q12**2 - 8496*gamma**2**2*m1**2*q12**2 + 4176*gamma**2*m1**4*q12**2 - 384*m2**2*q12**2 - 528*gamma**2*noise*m2**2*q12**2 - 3360*gamma*m2**2*q12**2 - 
        8496*gamma**2**2*m2**2*q12**2 + 20448*gamma**2*m1**2*m2**2*q12**2 + 4176*gamma**2*m2**4*q12**2 - 264*gamma*noise*q22*q12**2 - 144*q22*q12**2 - 264*gamma**2*noise*q22*q12**2 - 744*gamma**2*q22*q12**2 - 1368*gamma**2**3*q22*q12**2 + 
        4176*gamma*m1**2*q22*q12**2 + 12816*gamma**2*m1**2*q22*q12**2 + 3312*gamma*m2**2*q22*q12**2 + 10224*gamma**2*m2**2*q22*q12**2 + 324*q22**2*q12**2 + 510*gamma**2*noise*q22**2*q12**2 + 948*gamma*q22**2*q12**2 + 1494*gamma**2**2*q22**2*q12**2 - 
        9900*gamma**2*m1**2*q22**2*q12**2 - 6300*gamma**2*m2**2*q22**2*q12**2 - 1590*gamma*q22**3*q12**2 - 1590*gamma**2*q22**3*q12**2 + (9225*gamma**2*q22**4*q12**2)/4. + 4512*gamma*m1*m2*q12**3 + 13536*gamma**2*m1*m2*q12**3 - 
        17136*gamma**2*m1*m2*q22*q12**3 + 192*q12**4 + 264*gamma**2*noise*q12**4 + 528*gamma*q12**4 + 792*gamma**2**2*q12**4 - 4176*gamma**2*m1**2*q12**4 - 4176*gamma**2*m2**2*q12**4 - 2088*gamma*q22*q12**4 - 2088*gamma**2*q22*q12**4 + 4950*gamma**2*q22**2*q12**4 + 
        1044*gamma**2*q12**6 + 96*gamma*noise*m1**2*q22 + 192*m1**2*q22 + 288*gamma**2*noise*m1**2*q22 + 1440*gamma**2*m1**2*q22 + 3360*gamma**2**3*m1**2*q22 - 576*gamma*m1**4*q22 - 2880*gamma**2*m1**4*q22 - 3264*gamma*m1**2*m2**2*q22 - 
        16704*gamma**2*m1**2*m2**2*q22 + 16*noise*q22*q22 + 12*gamma**2*noise**2*q22*q22 + 48*gamma*noise*q22*q22 + 48**2*q22*q22 + 72*gamma**2*noise**2*q22*q22 + 240*gamma**3*q22*q22 + 420*gamma**2**4*q22*q22 - 192*m1**2*q22*q22 - 
        288*gamma**2*noise*m1**2*q22*q22 - 1728*gamma*m1**2*q22*q22 - 4320*gamma**2**2*m1**2*q22*q22 + 2160*gamma**2*m1**4*q22*q22 - 192*m2**2*q22*q22 - 288*gamma**2*noise*m2**2*q22*q22 - 1728*gamma*m2**2*q22*q22 - 
        4320*gamma**2**2*m2**2*q22*q22 + 10080*gamma**2*m1**2*m2**2*q22*q22 + 2160*gamma**2*m2**4*q22*q22 - 72*gamma*noise*q22**2*q22 - 48*q22**2*q22 - 72*gamma**2*noise*q22**2*q22 - 216*gamma**2*q22**2*q22 - 360*gamma**2**3*q22**2*q22 + 
        1080*gamma*m1**2*q22**2*q22 + 3240*gamma**2*m1**2*q22**2*q22 + 864*gamma*m2**2*q22**2*q22 + 2592*gamma**2*m2**2*q22**2*q22 + 60*q22**3*q22 + 90*gamma**2*noise*q22**3*q22 + 180*gamma*q22**3*q22 + 270*gamma**2**2*q22**3*q22 - 
        1680*gamma**2*m1**2*q22**3*q22 - 1080*gamma**2*m2**2*q22**3*q22 - 210*gamma*q22**4*q22 - 210*gamma**2*q22**4*q22 + (945*gamma**2*q22**5*q22)/4. - 672*m1*m2*q12*q22 - 1104*gamma**2*noise*m1*m2*q12*q22 - 6432*gamma*m1*m2*q12*q22 - 
        16848*gamma**2**2*m1*m2*q12*q22 + 13536*gamma**2*m1**3*m2*q12*q22 + 16992*gamma**2*m1*m2**3*q12*q22 + 6480*gamma*m1*m2*q22*q12*q22 + 20016*gamma**2*m1*m2*q22*q12*q22 - 12564*gamma**2*m1*m2*q22**2*q12*q22 - 
        264*gamma*noise*q12**2*q22 - 144*q12**2*q22 - 264*gamma**2*noise*q12**2*q22 - 744*gamma**2*q12**2*q22 - 1368*gamma**2**3*q12**2*q22 + 3312*gamma*m1**2*q12**2*q22 + 10224*gamma**2*m1**2*q12**2*q22 + 4176*gamma*m2**2*q12**2*q22 + 
        12816*gamma**2*m2**2*q12**2*q22 + 504*q22*q12**2*q22 + 828*gamma**2*noise*q22*q12**2*q22 + 1512*gamma*q22*q12**2*q22 + 2412*gamma**2**2*q22*q12**2*q22 - 12744*gamma**2*m1**2*q22*q12**2*q22 - 12744*gamma**2*m2**2*q22*q12**2*q22 - 
        3042*gamma*q22**2*q12**2*q22 - 3042*gamma**2*q22**2*q12**2*q22 + 4905*gamma**2*q22**3*q12**2*q22 - 17136*gamma**2*m1*m2*q12**3*q22 - 2088*gamma*q12**4*q22 - 2088*gamma**2*q12**4*q22 + 7992*gamma**2*q22*q12**4*q22 - 96*m1**2*q22**2 - 
        144*gamma**2*noise*m1**2*q22**2 - 864*gamma*m1**2*q22**2 - 2160*gamma**2**2*m1**2*q22**2 + 864*gamma**2*m1**4*q22**2 + 6336*gamma**2*m1**2*m2**2*q22**2 - 72*gamma*noise*q22*q22**2 - 48*q22*q22**2 - 72*gamma**2*noise*q22*q22**2 - 
        216*gamma**2*q22*q22**2 - 360*gamma**2**3*q22*q22**2 + 864*gamma*m1**2*q22*q22**2 + 2592*gamma**2*m1**2*q22*q22**2 + 1080*gamma*m2**2*q22*q22**2 + 3240*gamma**2*m2**2*q22*q22**2 + 72*q22**2*q22**2 + 108*gamma**2*noise*q22**2*q22**2 + 
        216*gamma*q22**2*q22**2 + 324*gamma**2**2*q22**2*q22**2 - 1620*gamma**2*m1**2*q22**2*q22**2 - 1620*gamma**2*m2**2*q22**2*q22**2 - 270*gamma*q22**3*q22**2 - 270*gamma**2*q22**3*q22**2 + 315*gamma**2*q22**4*q22**2 + 4056*gamma*m1*m2*q12*q22**2 + 
        12456*gamma**2*m1*m2*q12*q22**2 - 12564*gamma**2*m1*m2*q22*q12*q22**2 + 324*q12**2*q22**2 + 510*gamma**2*noise*q12**2*q22**2 + 948*gamma*q12**2*q22**2 + 1494*gamma**2**2*q12**2*q22**2 - 6300*gamma**2*m1**2*q12**2*q22**2 - 
        9900*gamma**2*m2**2*q12**2*q22**2 - 3042*gamma*q22*q12**2*q22**2 - 3042*gamma**2*q22*q12**2*q22**2 + (11763*gamma**2*q22**2*q12**2*q22**2)/2. + 4950*gamma**2*q12**4*q22**2 + 360*gamma*m1**2*q22**3 + 1080*gamma**2*m1**2*q22**3 + 60*q22*q22**3 + 
        90*gamma**2*noise*q22*q22**3 + 180*gamma*q22*q22**3 + 270*gamma**2**2*q22*q22**3 - 1080*gamma**2*m1**2*q22*q22**3 - 1680*gamma**2*m2**2*q22*q22**3 - 270*gamma*q22**2*q22**3 - 270*gamma**2*q22**2*q22**3 + (675*gamma**2*q22**3*q22**3)/2. - 
        6540*gamma**2*m1*m2*q12*q22**3 - 1590*gamma*q12**2*q22**3 - 1590*gamma**2*q12**2*q22**3 + 4905*gamma**2*q22*q12**2*q22**3 - 420*gamma**2*m1**2*q22**4 - 210*gamma*q22*q22**4 - 210*gamma**2*q22*q22**4 + 315*gamma**2*q22**2*q22**4 + 
        (9225*gamma**2*q12**2*q22**4)/4. + (945*gamma**2*q22*q22**5)/4.,
        # Cov[q12, q22]
        320*m1*m2**3 + 576*gamma**2*noise*m1*m2**3 + 5376*gamma*m1*m2**3 + 19584*gamma**2**2*m1*m2**3 - 5760*gamma**2*m1**3*m2**3 - 5760*gamma**2*m1*m2**5 - 1600*gamma*m1*m2**3*q22 - 8256*gamma**2*m1*m2**3*q22 + 2112*gamma**2*m1*m2**3*q22**2 + 
        272*gamma*noise*m2**2*q12 + 544*m2**2*q12 + 816*gamma**2*noise*m2**2*q12 + 4176*gamma**2*m2**2*q12 + 9936*gamma**2**3*m2**2*q12 - 4960*gamma*m1**2*m2**2*q12 - 25248*gamma**2*m1**2*m2**2*q12 - 2784*gamma*m2**4*q12 - 
        14112*gamma**2*m2**4*q12 - 240*m2**2*q22*q12 - 424*gamma**2*noise*m2**2*q22*q12 - 2384*gamma*m2**2*q22*q12 - 6312*gamma**2**2*m2**2*q22*q12 + 12720*gamma**2*m1**2*m2**2*q22*q12 + 4272*gamma**2*m2**4*q22*q12 + 
        996*gamma*m2**2*q22**2*q12 + 3036*gamma**2*m2**2*q22**2*q12 - 1230*gamma**2*m2**2*q22**3*q12 - 544*m1*m2*q12**2 - 832*gamma**2*noise*m1*m2*q12**2 - 4992*gamma*m1*m2*q12**2 - 12768*gamma**2**2*m1*m2*q12**2 + 
        8448*gamma**2*m1**3*m2*q12**2 + 17088*gamma**2*m1*m2**3*q12**2 + 4128*gamma*m1*m2*q22*q12**2 + 12672*gamma**2*m1*m2*q22*q12**2 - 7368*gamma**2*m1*m2*q22**2*q12**2 - 136*gamma*noise*q12**3 - 80*q12**3 - 136*gamma**2*noise*q12**3 - 
        392*gamma**2*q12**3 - 696*gamma**2**3*q12**3 + 1392*gamma*m1**2*q12**3 + 4272*gamma**2*m1**2*q12**3 + 2784*gamma*m2**2*q12**3 + 8448*gamma**2*m2**2*q12**3 + 216*q22*q12**3 + 348*gamma**2*noise*q22*q12**3 + 648*gamma*q22*q12**3 + 
        1020*gamma**2**2*q22*q12**3 - 4968*gamma**2*m1**2*q22*q12**3 - 7104*gamma**2*m2**2*q22*q12**3 - 1194*gamma*q22**2*q12**3 - 1194*gamma**2*q22**2*q12**3 + 1845*gamma**2*q22**3*q12**3 - 7104*gamma**2*m1*m2*q12**4 - 696*gamma*q12**5 - 696*gamma**2*q12**5 + 
        2484*gamma**2*q22*q12**5 + 272*gamma*noise*m1*m2*q22 + 544*m1*m2*q22 + 816*gamma**2*noise*m1*m2*q22 + 4176*gamma**2*m1*m2*q22 + 9936*gamma**2**3*m1*m2*q22 - 1696*gamma*m1**3*m2*q22 - 8544*gamma**2*m1**3*m2*q22 - 
        5472*gamma*m1*m2**3*q22 - 27936*gamma**2*m1*m2**3*q22 - 272*m1*m2*q22*q22 - 408*gamma**2*noise*m1*m2*q22*q22 - 2480*gamma*m1*m2*q22*q22 - 6360*gamma**2**2*m1*m2*q22*q22 + 4272*gamma**2*m1**3*m2*q22*q22 + 
        8304*gamma**2*m1*m2**3*q22*q22 + 1044*gamma*m1*m2*q22**2*q22 + 3180*gamma**2*m1*m2*q22**2*q22 - 1242*gamma**2*m1*m2*q22**3*q22 + 48*noise*q12*q22 + 32*gamma**2*noise**2*q12*q22 + 128*gamma*noise*q12*q22 + 128**2*q12*q22 + 
        192*gamma**2*noise**2*q12*q22 + 672*gamma**3*q12*q22 + 1224*gamma**2**4*q12*q22 - 288*m1**2*q12*q22 - 400*gamma**2*noise*m1**2*q12*q22 - 2528*gamma*m1**2*q12*q22 - 6384*gamma**2**2*m1**2*q12*q22 + 2112*gamma**2*m1**4*q12*q22 - 
        912*m2**2*q12*q22 - 1368*gamma**2*noise*m2**2*q12*q22 - 8304*gamma*m2**2*q12*q22 - 21240*gamma**2**2*m2**2*q12*q22 + 25392*gamma**2*m1**2*m2**2*q12*q22 + 14832*gamma**2*m2**4*q12*q22 - 200*gamma*noise*q22*q12*q22 - 112*q22*q12*q22 - 
        200*gamma**2*noise*q22*q12*q22 - 568*gamma**2*q22*q12*q22 - 1032*gamma**2**3*q22*q12*q22 + 2112*gamma*m1**2*q22*q12*q22 + 6432*gamma**2*m1**2*q22*q12*q22 + 4056*gamma*m2**2*q22*q12*q22 + 12552*gamma**2*m2**2*q22*q12*q22 + 
        168*q22**2*q12*q22 + 252*gamma**2*noise*q22**2*q12*q22 + 480*gamma*q22**2*q12*q22 + 744*gamma**2**2*q22**2*q12*q22 - 3732*gamma**2*m1**2*q22**2*q12*q22 - 5166*gamma**2*m2**2*q22**2*q12*q22 - 606*gamma*q22**3*q12*q22 - 
        606*gamma**2*q22**3*q12*q22 + (1395*gamma**2*q22**4*q12*q22)/2. + 8400*gamma*m1*m2*q12**2*q22 + 25488*gamma**2*m1*m2*q12**2*q22 - 21240*gamma**2*m1*m2*q22*q12**2*q22 + 456*q12**3*q22 + 684*gamma**2*noise*q12**3*q22 + 
        1320*gamma*q12**3*q22 + 2028*gamma**2**2*q12**3*q22 - 7032*gamma**2*m1**2*q12**3*q22 - 14832*gamma**2*m2**2*q12**3*q22 - 3444*gamma*q22*q12**3*q22 - 3444*gamma**2*q22*q12**3*q22 + 6147*gamma**2*q22**2*q12**3*q22 + 3708*gamma**2*q12**5*q22 - 
        432*m1*m2*q22**2 - 696*gamma**2*noise*m1*m2*q22**2 - 4080*gamma*m1*m2*q22**2 - 10584*gamma**2**2*m1*m2*q22**2 + 4272*gamma**2*m1**3*m2*q22**2 + 14832*gamma**2*m1*m2**3*q22**2 + 2040*gamma*m1*m2*q22*q22**2 + 
        6312*gamma**2*m1*m2*q22*q22**2 - 2646*gamma**2*m1*m2*q22**2*q22**2 - 336*gamma*noise*q12*q22**2 - 192*q12*q22**2 - 336*gamma**2*noise*q12*q22**2 - 960*gamma**2*q12*q22**2 - 1728*gamma**2**3*q12*q22**2 + 2064*gamma*m1**2*q12*q22**2 + 
        6384*gamma**2*m1**2*q12*q22**2 + 7284*gamma*m2**2*q12*q22**2 + 22284*gamma**2*m2**2*q12*q22**2 + 312*q22*q12*q22**2 + 516*gamma**2*noise*q22*q12*q22**2 + 936*gamma*q22*q12*q22**2 + 1500*gamma**2**2*q22*q12*q22**2 - 
        5328*gamma**2*m1**2*q22*q12*q22**2 - 11058*gamma**2*m2**2*q22*q12*q22**2 - 1260*gamma*q22**2*q12*q22**2 - 1260*gamma**2*q22**2*q12*q22**2 + 1539*gamma**2*q22**3*q12*q22**2 - 22416*gamma**2*m1*m2*q12**2*q22**2 - 3642*gamma*q12**3*q22**2 - 
        3642*gamma**2*q12**3*q22**2 + 9279*gamma**2*q22*q12**3*q22**2 + 2388*gamma*m1*m2*q22**3 + 7308*gamma**2*m1*m2*q22**3 - 3654*gamma**2*m1*m2*q22*q22**3 + 384*q12*q22**3 + 600*gamma**2*noise*q12*q22**3 + 1128*gamma*q12*q22**3 + 
        1764*gamma**2**2*q12*q22**3 - 3660*gamma**2*m1**2*q12*q22**3 - 14850*gamma**2*m2**2*q12*q22**3 - 1758*gamma*q22*q12*q22**3 - 1758*gamma**2*q22*q12*q22**3 + 2268*gamma**2*q22**2*q12*q22**3 + 7425*gamma**2*q12**3*q22**3 - 3690*gamma**2*m1*m2*q22**4 - 
        1800*gamma*q12*q22**4 - 1800*gamma**2*q12*q22**4 + 2745*gamma**2*q22*q12*q22**4 + (5085*gamma**2*q12*q22**5)/2.,
        # Cov[q12, m1]
        72*gamma*noise*m1**2*m2 + 432*m1**2*m2 + 2376*gamma**2*m1**2*m2 - 720*gamma*m1**4*m2 - 720*gamma*m1**2*m2**3 + 8*noise*m2*q22 + 36*gamma*noise*m2*q22 + 120**2*m2*q22 + 420*gamma**3*m2*q22 - 264*m1**2*m2*q22 - 
        2016*gamma*m1**2*m2*q22 - 48*m2**3*q22 - 360*gamma*m2**3*q22 - 18*gamma*noise*m2*q22**2 - 72*m2*q22**2 - 270*gamma**2*m2*q22**2 + 774*gamma*m1**2*m2*q22**2 + 108*gamma*m2**3*q22**2 + 30*m2*q22**3 + 135*gamma*m2*q22**3 - 
        (105*gamma*m2*q22**4)/2. + 16*noise*m1*q12 + 60*gamma*noise*m1*q12 + 216**2*m1*q12 + 804*gamma**3*m1*q12 - 192*m1**3*q12 - 1368*gamma*m1**3*q12 - 272*m1*m2**2*q12 - 2040*gamma*m1*m2**2*q12 - 66*gamma*noise*m1*q22*q12 - 
        240*m1*q22*q12 - 1026*gamma**2*m1*q22*q12 + 1044*gamma*m1**3*q22*q12 + 1236*gamma*m1*m2**2*q22*q12 + 162*m1*q22**2*q12 + 747*gamma*m1*q22**2*q12 - (795*gamma*m1*q22**3*q12)/2. - 32*gamma*noise*m2*q12**2 - 
        136*m2*q12**2 - 528*gamma**2*m2*q12**2 + 1272*gamma*m1**2*m2*q12**2 + 336*gamma*m2**3*q12**2 + 132*m2*q22*q12**2 + 636*gamma*m2*q22*q12**2 - 390*gamma*m2*q22**2*q12**2 + 96*m1*q12**3 + 396*gamma*m1*q12**3 - 
        522*gamma*m1*q22*q12**3 - 168*gamma*m2*q12**4 - 136*m1**2*m2*q22 - 984*gamma*m1**2*m2*q22 - 18*gamma*noise*m2*q22*q22 - 72*m2*q22*q22 - 270*gamma**2*m2*q22*q22 + 600*gamma*m1**2*m2*q22*q22 + 180*gamma*m2**3*q22*q22 + 
        36*m2*q22**2*q22 + 162*gamma*m2*q22**2*q22 - (135*gamma*m2*q22**3*q22)/2. - 34*gamma*noise*m1*q12*q22 - 104*m1*q12*q22 - 498*gamma**2*m1*q12*q22 + 420*gamma*m1**3*q12*q22 + 1044*gamma*m1*m2**2*q12*q22 + 
        120*m1*q22*q12*q22 + 570*gamma*m1*q22*q12*q22 - (741*gamma*m1*q22**2*q12*q22)/2. + 108*m2*q12**2*q22 + 528*gamma*m2*q12**2*q22 - 522*gamma*m2*q22*q12**2*q22 - 354*gamma*m1*q12**3*q22 + 258*gamma*m1**2*m2*q22**2 + 
        30*m2*q22*q22**2 + 135*gamma*m2*q22*q22**2 - (135*gamma*m2*q22**2*q22**2)/2. + 54*m1*q12*q22**2 + 219*gamma*m1*q12*q22**2 - (477*gamma*m1*q22*q12*q22**2)/2. - 300*gamma*m2*q12**2*q22**2 - (105*gamma*m2*q22*q22**3)/2. - 
        (195*gamma*m1*q12*q22**3)/2.,
        # Cov[q12, m2]
        72*gamma*noise*m1*m2**2 + 432*m1*m2**2 + 2376*gamma**2*m1*m2**2 - 720*gamma*m1**3*m2**2 - 720*gamma*m1*m2**4 - 136*m1*m2**2*q22 - 984*gamma*m1*m2**2*q22 + 258*gamma*m1*m2**2*q22**2 + 16*noise*m2*q12 + 60*gamma*noise*m2*q12 + 
        216**2*m2*q12 + 804*gamma**3*m2*q12 - 272*m1**2*m2*q12 - 2040*gamma*m1**2*m2*q12 - 192*m2**3*q12 - 1368*gamma*m2**3*q12 - 34*gamma*noise*m2*q22*q12 - 104*m2*q22*q12 - 498*gamma**2*m2*q22*q12 + 
        1044*gamma*m1**2*m2*q22*q12 + 420*gamma*m2**3*q22*q12 + 54*m2*q22**2*q12 + 219*gamma*m2*q22**2*q12 - (195*gamma*m2*q22**3*q12)/2. - 32*gamma*noise*m1*q12**2 - 136*m1*q12**2 - 528*gamma**2*m1*q12**2 + 336*gamma*m1**3*q12**2 + 
        1272*gamma*m1*m2**2*q12**2 + 108*m1*q22*q12**2 + 528*gamma*m1*q22*q12**2 - 300*gamma*m1*q22**2*q12**2 + 96*m2*q12**3 + 396*gamma*m2*q12**3 - 354*gamma*m2*q22*q12**3 - 168*gamma*m1*q12**4 + 8*noise*m1*q22 + 36*gamma*noise*m1*q22 + 
        120**2*m1*q22 + 420*gamma**3*m1*q22 - 48*m1**3*q22 - 360*gamma*m1**3*q22 - 264*m1*m2**2*q22 - 2016*gamma*m1*m2**2*q22 - 18*gamma*noise*m1*q22*q22 - 72*m1*q22*q22 - 270*gamma**2*m1*q22*q22 + 
        180*gamma*m1**3*q22*q22 + 600*gamma*m1*m2**2*q22*q22 + 30*m1*q22**2*q22 + 135*gamma*m1*q22**2*q22 - (105*gamma*m1*q22**3*q22)/2. - 66*gamma*noise*m2*q12*q22 - 240*m2*q12*q22 - 1026*gamma**2*m2*q12*q22 + 
        1236*gamma*m1**2*m2*q12*q22 + 1044*gamma*m2**3*q12*q22 + 120*m2*q22*q12*q22 + 570*gamma*m2*q22*q12*q22 - (477*gamma*m2*q22**2*q12*q22)/2. + 132*m1*q12**2*q22 + 636*gamma*m1*q12**2*q22 - 522*gamma*m1*q22*q12**2*q22 - 
        522*gamma*m2*q12**3*q22 - 18*gamma*noise*m1*q22**2 - 72*m1*q22**2 - 270*gamma**2*m1*q22**2 + 108*gamma*m1**3*q22**2 + 774*gamma*m1*m2**2*q22**2 + 36*m1*q22*q22**2 + 162*gamma*m1*q22*q22**2 - (135*gamma*m1*q22**2*q22**2)/2. + 
        162*m2*q12*q22**2 + 747*gamma*m2*q12*q22**2 - (741*gamma*m2*q22*q12*q22**2)/2. - 390*gamma*m1*q12**2*q22**2 + 30*m1*q22**3 + 135*gamma*m1*q22**3 - (135*gamma*m1*q22*q22**3)/2. - (795*gamma*m2*q12*q22**3)/2. - (105*gamma*m1*q22**4)/2.,
        # Var[q22]
        320*m2**4 + 576*gamma**2*noise*m2**4 + 5376*gamma*m2**4 + 19584*gamma**2**2*m2**4 - 5760*gamma**2*m1**2*m2**4 - 5760*gamma**2*m2**6 - 512*gamma*m2**4*q22 - 2688*gamma**2*m2**4*q22 + 416*gamma**2*m2**4*q22**2 - 4352*gamma*m1*m2**3*q12 - 
        22272*gamma**2*m1*m2**3*q12 + 6784*gamma**2*m1*m2**3*q22*q12 - 320*m2**2*q12**2 - 576*gamma**2*noise*m2**2*q12**2 - 3200*gamma*m2**2*q12**2 - 8448*gamma**2**2*m2**2*q12**2 + 10112*gamma**2*m1**2*m2**2*q12**2 + 8640*gamma**2*m2**4*q12**2 + 
        1600*gamma*m2**2*q22*q12**2 + 4864*gamma**2*m2**2*q22*q12**2 - 2112*gamma**2*m2**2*q22**2*q12**2 + 2176*gamma*m1*m2*q12**3 + 6784*gamma**2*m1*m2*q12**3 - 5568*gamma**2*m1*m2*q22*q12**3 + 80*q12**4 + 144*gamma**2*noise*q12**4 + 
        256*gamma*q12**4 + 416*gamma**2**2*q12**4 - 1440*gamma**2*m1**2*q12**4 - 4320*gamma**2*m2**2*q12**4 - 672*gamma*q22*q12**4 - 672*gamma**2*q22*q12**4 + 1224*gamma**2*q22**2*q12**4 + 720*gamma**2*q12**6 + 544*gamma*noise*m2**2*q22 + 1088*m2**2*q22 + 
        1632*gamma**2*noise*m2**2*q22 + 8352*gamma**2*m2**2*q22 + 19872*gamma**2**3*m2**2*q22 - 3392*gamma*m1**2*m2**2*q22 - 17088*gamma**2*m1**2*m2**2*q22 - 8256*gamma*m2**4*q22 - 42048*gamma**2*m2**4*q22 - 160*m2**2*q22*q22 - 
        272*gamma**2*noise*m2**2*q22*q22 - 1568*gamma*m2**2*q22*q22 - 4176*gamma**2**2*m2**2*q22*q22 + 5152*gamma**2*m1**2*m2**2*q22*q22 + 4128*gamma**2*m2**4*q22*q22 + 392*gamma*m2**2*q22**2*q22 + 1208*gamma**2*m2**2*q22**2*q22 - 
        348*gamma**2*m2**2*q22**3*q22 - 768*m1*m2*q12*q22 - 1088*gamma**2*noise*m1*m2*q12*q22 - 6784*gamma*m1*m2*q12*q22 - 17088*gamma**2**2*m1*m2*q12*q22 + 6784*gamma**2*m1**3*m2*q12*q22 + 33792*gamma**2*m1*m2**3*q12*q22 + 
        3392*gamma*m1*m2*q22*q12*q22 + 10304*gamma**2*m1*m2*q22*q12*q22 - 4272*gamma**2*m1*m2*q22**2*q12*q22 - 272*gamma*noise*q12**2*q22 - 160*q12**2*q22 - 272*gamma**2*noise*q12**2*q22 - 784*gamma**2*q12**2*q22 - 
        1392*gamma**2**3*q12**2*q22 + 1696*gamma*m1**2*q12**2*q22 + 5152*gamma**2*m1**2*q12**2*q22 + 8256*gamma*m2**2*q12**2*q22 + 25152*gamma**2*m2**2*q12**2*q22 + 272*q22*q12**2*q22 + 408*gamma**2*noise*q22*q12**2*q22 + 
        784*gamma*q22*q12**2*q22 + 1208*gamma**2**2*q22*q12**2*q22 - 4272*gamma**2*m1**2*q22*q12**2*q22 - 12576*gamma**2*m2**2*q22*q12**2*q22 - 1044*gamma*q22**2*q12**2*q22 - 1044*gamma**2*q22**2*q12**2*q22 + 1242*gamma**2*q22**3*q12**2*q22 - 
        16896*gamma**2*m1*m2*q12**3*q22 - 2064*gamma*q12**4*q22 - 2064*gamma**2*q12**4*q22 + 5256*gamma**2*q22*q12**4*q22 + 48*noise*q22**2 + 32*gamma**2*noise**2*q22**2 + 128*gamma*noise*q22**2 + 128**2*q22**2 + 192*gamma**2*noise**2*q22**2 + 672*gamma**3*q22**2 + 
        1224*gamma**2**4*q22**2 - 96*m1**2*q22**2 - 128*gamma**2*noise*m1**2*q22**2 - 832*gamma*m1**2*q22**2 - 2112*gamma**2**2*m1**2*q22**2 + 416*gamma**2*m1**4*q22**2 - 1344*m2**2*q22**2 - 2064*gamma**2*noise*m2**2*q22**2 - 12384*gamma*m2**2*q22**2 - 
        31824*gamma**2**2*m2**2*q22**2 + 12768*gamma**2*m1**2*m2**2*q22**2 + 29664*gamma**2*m2**4*q22**2 - 64*gamma*noise*q22*q22**2 - 32*q22*q22**2 - 64*gamma**2*noise*q22*q22**2 - 176*gamma**2*q22*q22**2 - 336*gamma**2**3*q22*q22**2 + 
        416*gamma*m1**2*q22*q22**2 + 1280*gamma**2*m1**2*q22*q22**2 + 1968*gamma*m2**2*q22*q22**2 + 6192*gamma**2*m2**2*q22*q22**2 + 32*q22**2*q22**2 + 48*gamma**2*noise*q22**2*q22**2 + 88*gamma*q22**2*q22**2 + 140*gamma**2**2*q22**2*q22**2 - 
        528*gamma**2*m1**2*q22**2*q22**2 - 1524*gamma**2*m2**2*q22**2*q22**2 - 84*gamma*q22**3*q22**2 - 84*gamma**2*q22**3*q22**2 + (153*gamma**2*q22**4*q22**2)/2. + 8448*gamma*m1*m2*q12*q22**2 + 25728*gamma**2*m1*m2*q12*q22**2 - 
        12864*gamma**2*m1*m2*q22*q12*q22**2 + 672*q12**2*q22**2 + 1032*gamma**2*noise*q12**2*q22**2 + 1968*gamma*q12**2*q22**2 + 3048*gamma**2**2*q12**2*q22**2 - 6384*gamma**2*m1**2*q12**2*q22**2 - 29664*gamma**2*m2**2*q12**2*q22**2 - 
        3096*gamma*q22*q12**2*q22**2 - 3096*gamma**2*q22*q12**2*q22**2 + 3978*gamma**2*q22**2*q12**2*q22**2 + 7416*gamma**2*q12**4*q22**2 - 336*gamma*noise*q22**3 - 192*q22**3 - 336*gamma**2*noise*q22**3 - 960*gamma**2*q22**3 - 1728*gamma**2**3*q22**3 + 
        672*gamma*m1**2*q22**3 + 2112*gamma**2*m1**2*q22**3 + 9672*gamma*m2**2*q22**3 + 29592*gamma**2*m2**2*q22**3 + 96*q22*q22**3 + 168*gamma**2*noise*q22*q22**3 + 288*gamma*q22*q22**3 + 480*gamma**2**2*q22*q22**3 - 1056*gamma**2*m1**2*q22*q22**3 - 
        4836*gamma**2*m2**2*q22*q22**3 - 240*gamma*q22**2*q22**3 - 240*gamma**2*q22**2*q22**3 + 216*gamma**2*q22**3*q22**3 - 19920*gamma**2*m1*m2*q12*q22**3 - 4836*gamma*q12**2*q22**3 - 4836*gamma**2*q12**2*q22**3 + 7398*gamma**2*q22*q12**2*q22**3 + 384*q22**4 + 
        600*gamma**2*noise*q22**4 + 1128*gamma*q22**4 + 1764*gamma**2**2*q22**4 - 1200*gamma**2*m1**2*q22**4 - 18540*gamma**2*m2**2*q22**4 - 564*gamma*q22*q22**4 - 564*gamma**2*q22*q22**4 + 441*gamma**2*q22**2*q22**4 + 9270*gamma**2*q12**2*q22**4 - 1800*gamma*q22**5 - 
        1800*gamma**2*q22**5 + 900*gamma**2*q22*q22**5 + (5085*gamma**2*q22**6)/2.,
        # Cov[q22, m1]
        72*gamma*noise*m1*m2**2 + 432*m1*m2**2 + 2376*gamma**2*m1*m2**2 - 720*gamma*m1**3*m2**2 - 720*gamma*m1*m2**4 - 120*m1*m2**2*q22 - 984*gamma*m1*m2**2*q22 + 258*gamma*m1*m2**2*q22**2 + 16*noise*m2*q12 + 72*gamma*noise*m2*q12 + 
        240**2*m2*q12 + 840*gamma**3*m2*q12 - 288*m1**2*m2*q12 - 2064*gamma*m1**2*m2*q12 - 176*m2**3*q12 - 1392*gamma*m2**3*q12 - 36*gamma*noise*m2*q22*q12 - 144*m2*q22*q12 - 540*gamma**2*m2*q22*q12 + 
        1032*gamma*m1**2*m2*q22*q12 + 424*gamma*m2**3*q22*q12 + 60*m2*q22**2*q12 + 270*gamma*m2*q22**2*q12 - 105*gamma*m2*q22**3*q12 - 36*gamma*noise*m1*q12**2 - 120*m1*q12**2 - 516*gamma**2*m1*q12**2 + 360*gamma*m1**3*q12**2 + 
        1264*gamma*m1*m2**2*q12**2 + 108*m1*q22*q12**2 + 492*gamma*m1*q22*q12**2 - 297*gamma*m1*q22**2*q12**2 + 88*m2*q12**3 + 424*gamma*m2*q12**3 - 348*gamma*m2*q22*q12**3 - 180*gamma*m1*q12**4 + 8*noise*m1*q22 + 24*gamma*noise*m1*q22 + 
        96**2*m1*q22 + 384*gamma**3*m1*q22 - 48*m1**3*q22 - 336*gamma*m1**3*q22 - 280*m1*m2**2*q22 - 1992*gamma*m1*m2**2*q22 - 12*gamma*noise*m1*q22*q22 - 48*m1*q22*q22 - 240*gamma**2*m1*q22*q22 + 
        168*gamma*m1**3*q22*q22 + 572*gamma*m1*m2**2*q22*q22 + 24*m1*q22**2*q22 + 120*gamma*m1*q22**2*q22 - 48*gamma*m1*q22**3*q22 - 68*gamma*noise*m2*q12*q22 - 280*m2*q12*q22 - 1068*gamma**2*m2*q12*q22 + 
        1272*gamma*m1**2*m2*q12*q22 + 1032*gamma*m2**3*q12*q22 + 140*m2*q22*q12*q22 + 644*gamma*m2*q22*q12*q22 - 267*gamma*m2*q22**2*q12*q22 + 140*m1*q12**2*q22 + 572*gamma*m1*q12**2*q22 - 498*gamma*m1*q22*q12**2*q22 - 
        516*gamma*m2*q12**3*q22 - 16*gamma*noise*m1*q22**2 - 32*m1*q22**2 - 228*gamma**2*m1*q22**2 + 104*gamma*m1**3*q22**2 + 786*gamma*m1*m2**2*q22**2 + 16*m1*q22*q22**2 + 124*gamma*m1*q22*q22**2 - 57*gamma*m1*q22**2*q22**2 + 
        168*m2*q12*q22**2 + 798*gamma*m2*q12*q22**2 - 399*gamma*m2*q22*q12*q22**2 - 393*gamma*m1*q12**2*q22**2 + 24*m1*q22**3 + 84*gamma*m1*q22**3 - 42*gamma*m1*q22*q22**3 - 405*gamma*m2*q12*q22**3 - 45*gamma*m1*q22**4,
        # Cov[q22, m2]
        72*gamma*noise*m2**3 + 432*m2**3 + 2376*gamma**2*m2**3 - 720*gamma*m1**2*m2**3 - 720*gamma*m2**5 - 40*m2**3*q22 - 312*gamma*m2**3*q22 + 50*gamma*m2**3*q22**2 - 272*m1*m2**2*q12 - 2016*gamma*m1*m2**2*q12 + 
        624*gamma*m1*m2**2*q22*q12 - 36*gamma*noise*m2*q12**2 - 120*m2*q12**2 - 516*gamma**2*m2*q12**2 + 616*gamma*m1**2*m2*q12**2 + 720*gamma*m2**3*q12**2 + 68*m2*q22*q12**2 + 284*gamma*m2*q22*q12**2 - 129*gamma*m2*q22**2*q12**2 + 
        40*m1*q12**3 + 208*gamma*m1*q12**3 - 168*gamma*m1*q22*q12**3 - 180*gamma*m2*q12**4 + 24*noise*m2*q22 + 96*gamma*noise*m2*q22 + 336**2*m2*q22 + 1224*gamma**3*m2*q22 - 144*m1**2*m2*q22 - 1056*gamma*m1**2*m2*q22 - 
        456*m2**3*q22 - 3384*gamma*m2**3*q22 - 16*gamma*noise*m2*q22*q22 - 56*m2*q22*q22 - 252*gamma**2*m2*q22*q22 + 320*gamma*m1**2*m2*q22*q22 + 324*gamma*m2**3*q22*q22 + 16*m2*q22**2*q22 + 70*gamma*m2*q22**2*q22 - 
        21*gamma*m2*q22**3*q22 - 32*gamma*noise*m1*q12*q22 - 136*m1*q12*q22 - 528*gamma**2*m1*q12*q22 + 208*gamma*m1**3*q12*q22 + 2064*gamma*m1*m2**2*q12*q22 + 68*m1*q22*q12*q22 + 320*gamma*m1*q22*q12*q22 - 
        132*gamma*m1*q22**2*q12*q22 + 228*m2*q12**2*q22 + 996*gamma*m2*q12**2*q22 - 510*gamma*m2*q22*q12**2*q22 - 336*gamma*m1*q12**3*q22 - 84*gamma*noise*m2*q22**2 - 312*m2*q22**2 - 1296*gamma**2*m2*q22**2 + 
        528*gamma*m1**2*m2*q22**2 + 1818*gamma*m2**3*q22**2 + 48*m2*q22*q22**2 + 240*gamma*m2*q22*q22**2 - 60*gamma*m2*q22**2*q22**2 + 108*m1*q12*q22**2 + 528*gamma*m1*q12*q22**2 - 264*gamma*m1*q22*q12*q22**2 - 
        909*gamma*m2*q12**2*q22**2 + 192*m2*q22**3 + 882*gamma*m2*q22**3 - 141*gamma*m2*q22*q22**3 - 300*gamma*m1*q12*q22**3 - 450*gamma*m2*q22**4,
        # Var[m1]
        8*noise*m1**2 + 324**2*m1**2 - 96*m1**4 - 96*m1**2*m2**2 + 4*noise*q22 + 60**3*q22 - 252*m1**2*q22 - 48*m2**2*q22 - 36**2*q22**2 + 81*m1**2*q22**2 + 12*m2**2*q22**2 + 15*q22**3 - 
        168*m1*m2*q12 + 84*m1*m2*q22*q12 - 24**2*q12**2 + 48*m1**2*q12**2 + 20*m2**2*q12**2 + 24*q22*q12**2 - 36*m1**2*q22 - 12**2*q22*q22 + 18*m1**2*q22*q22 + 12*m2**2*q22*q22 + 
        6*q22**2*q22 + 44*m1*m2*q12*q22 + 12*q12**2*q22 + 5*m1**2*q22**2 + 3*q22*q22**2,
        # Cov[m1, m2]
        8*noise*m1*m2 + 324**2*m1*m2 - 96*m1**3*m2 - 96*m1*m2**3 - 120*m1*m2*q22 + 27*m1*m2*q22**2 + 4*noise*q12 + 60**3*q12 - 132*m1**2*q12 - 132*m2**2*q12 - 36**2*q22*q12 + 
        54*m1**2*q22*q12 + 34*m2**2*q22*q12 + 15*q22**2*q12 + 68*m1*m2*q12**2 + 12*q12**3 - 120*m1*m2*q22 + 26*m1*m2*q22*q22 - 36**2*q12*q22 + 34*m1**2*q12*q22 + 54*m2**2*q12*q22 + 
        18*q22*q12*q22 + 27*m1*m2*q22**2 + 15*q12*q22**2,
        # Var[m2]
        8*noise*m2**2 + 324**2*m2**2 - 96*m1**2*m2**2 - 96*m2**4 - 36*m2**2*q22 + 5*m2**2*q22**2 - 168*m1*m2*q12 + 44*m1*m2*q22*q12 - 24**2*q12**2 + 20*m1**2*q12**2 + 48*m2**2*q12**2 + 
        12*q22*q12**2 + 4*noise*q22 + 60**3*q22 - 48*m1**2*q22 - 252*m2**2*q22 - 12**2*q22*q22 + 12*m1**2*q22*q22 + 18*m2**2*q22*q22 + 3*q22**2*q22 + 84*m1*m2*q12*q22 + 
        24*q12**2*q22 - 36**2*q22**2 + 12*m1**2*q22**2 + 81*m2**2*q22**2 + 6*q22*q22**2 + 15*q22**3
    ]))
