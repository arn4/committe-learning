#include <cmath>

namespace committee_learning{
namespace H3ode {
  template<typename Real>
  inline Real I2(Real C11, Real C12, Real C22) {
    return 9*C12 - 9*C11*C12 + 6*C12*C12*C12 - 9*C12*C22 + 9*C11*C12*C22;
  }
  
  template<typename Real>
  inline Real I2_noise(Real C11, Real C12, Real C22) {
    return 9 - 9*C11 + 18*C12*C12 - 9*C22 + 9*C11*C22;
  }

  template<typename Real>
  inline Real I3(Real C11, Real C12, Real C13, Real C22, Real C23, Real C33) {
    return -18*C12*C13 + 9*C23 - 9*C11*C23 + 18*C13*C13*C23 + 18*C12*C13*C33 - 9*C23*C33 + 9*C11*C23*C33;
  }

  template<typename Real>
  inline Real I4(Real C11, Real C12, Real C13, Real C14, Real C22, Real C23, Real C24, Real C33, Real C34, Real C44) {
    return -162*C13*C14 + 162*C13*C14*C22 + 324*C12*C14*C23 - 324*C13*C14*C23*C23 + 324*C12*C13*C24 - 162*C23*C24 + 162*C11*C23*C24 - 324*C13*C13*C23*C24 - 
            324*C14*C14*C23*C24 - 324*C13*C14*C24*C24 + 162*C13*C14*C33 - 162*C13*C14*C22*C33 - 324*C12*C14*C23*C33 - 324*C12*C13*C24*C33 + 162*C23*C24*C33 - 
            162*C11*C23*C24*C33 + 324*C14*C14*C23*C24*C33 + 324*C13*C14*C24*C24*C33 + 81*C34 - 81*C11*C34 + 162*C12*C12*C34 + 162*C13*C13*C34 + 162*C14*C14*C34 - 
            81*C22*C34 + 81*C11*C22*C34 - 162*C13*C13*C22*C34 - 162*C14*C14*C22*C34 - 648*C12*C13*C23*C34 + 162*C23*C23*C34 - 162*C11*C23*C23*C34 + 
            324*C14*C14*C23*C23*C34 - 648*C12*C14*C24*C34 + 1296*C13*C14*C23*C24*C34 + 162*C24*C24*C34 - 162*C11*C24*C24*C34 + 324*C13*C13*C24*C24*C34 - 81*C33*C34 + 
            81*C11*C33*C34 - 162*C12*C12*C33*C34 - 162*C14*C14*C33*C34 + 81*C22*C33*C34 - 81*C11*C22*C33*C34 + 162*C14*C14*C22*C33*C34 + 648*C12*C14*C24*C33*C34 - 
            162*C24*C24*C33*C34 + 162*C11*C24*C24*C33*C34 - 324*C13*C14*C34*C34 + 324*C13*C14*C22*C34*C34 + 648*C12*C14*C23*C34*C34 + 648*C12*C13*C24*C34*C34 - 
            324*C23*C24*C34*C34 + 324*C11*C23*C24*C34*C34 + 54*C34*C34*C34 - 54*C11*C34*C34*C34 + 108*C12*C12*C34*C34*C34 - 54*C22*C34*C34*C34 + 54*C11*C22*C34*C34*C34 + 162*C13*C14*C44 - 
            162*C13*C14*C22*C44 - 324*C12*C14*C23*C44 + 324*C13*C14*C23*C23*C44 - 324*C12*C13*C24*C44 + 162*C23*C24*C44 - 162*C11*C23*C24*C44 + 
            324*C13*C13*C23*C24*C44 - 162*C13*C14*C33*C44 + 162*C13*C14*C22*C33*C44 + 324*C12*C14*C23*C33*C44 + 324*C12*C13*C24*C33*C44 - 
            162*C23*C24*C33*C44 + 162*C11*C23*C24*C33*C44 - 81*C34*C44 + 81*C11*C34*C44 - 162*C12*C12*C34*C44 - 162*C13*C13*C34*C44 + 81*C22*C34*C44 - 
            81*C11*C22*C34*C44 + 162*C13*C13*C22*C34*C44 + 648*C12*C13*C23*C34*C44 - 162*C23*C23*C34*C44 + 162*C11*C23*C23*C34*C44 + 81*C33*C34*C44 - 
            81*C11*C33*C34*C44 + 162*C12*C12*C33*C34*C44 - 81*C22*C33*C34*C44 + 81*C11*C22*C33*C34*C44;
  }

}
}